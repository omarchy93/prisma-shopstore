
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {

  id        BigInt     @id @default(autoincrement()) 
  firstName String  @db.VarChar(200)
  lastName  String
  email    String    @unique
  mobile String
  password  String   
  otp String 
  createAt  DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @updatedAt @db.Timestamp(0)
  customer Customer[]
  categorie Categorie[]
  product Product[]
  invoice Invoice[]
  invoice_product Invoice_product[]

  @@map("users")

}

model Customer {

  id        BigInt      @id @default(autoincrement())
  name String
  email String
  mobile String
  userId    BigInt  
  user    User @relation(fields: [userId],references: [id],onDelete: Restrict,onUpdate: Cascade)
 createAt  DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @updatedAt @db.Timestamp(0)
  invoice Invoice[]
  @@map("customers")
}

model Categorie {

  id        BigInt      @id @default(autoincrement())
  name String
  userId    BigInt  
  user    User @relation(fields: [userId],references: [id],onDelete: Restrict,onUpdate: Cascade)
 createAt  DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @updatedAt @db.Timestamp(0)
  product Product[]
  @@map("categories")
}

model Product {

  id      BigInt     @id @default(autoincrement())
  name String
  price  String
  unit String
  imgUrl String
  userId    BigInt 
  user    User @relation(fields: [userId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  categorieId BigInt 
  categorie Categorie @relation(fields: [categorieId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  invoice_product Invoice_product?
  createAt  DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @updatedAt @db.Timestamp(0)
  @@map("products")
}

model Invoice {

  id      BigInt     @id @default(autoincrement())
  total String
  discount  String
  vat String
  payable String
  userId    BigInt 
  user    User @relation(fields: [userId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  customerId BigInt 
  customer Customer @relation(fields: [customerId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  invoice_product Invoice_product[]
  createAt  DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @updatedAt @db.Timestamp(0)
  @@map("invoices")
}

model Invoice_product {

  id      BigInt     @id @default(autoincrement())
  qty String
  sale_price  String
  userId    BigInt 
  user    User @relation(fields: [userId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  productId BigInt @unique
  product Product @relation(fields: [productId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  invoiceId BigInt 
  invoice Invoice @relation(fields: [invoiceId],references: [id],onDelete: Restrict,onUpdate: Cascade)
  createAt  DateTime @default(now()) @db.Timestamp(0)
  updatedAt DateTime @updatedAt @db.Timestamp(0)
  @@map("invoice_products")
}



